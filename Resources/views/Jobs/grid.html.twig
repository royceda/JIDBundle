{# src/Arii/JIDBundle/Resources/views/Default/history.html.twig #}
{% extends "AriiJIDBundle::layout.html.twig" %}
{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section table_section">
	<!--[if !IE]>start title wrapper<![endif]-->
	<div class="title_wrapper">
		<h2>{{ "Jobs" | trans }}</h2>
<ul  class="section_menu">
{% if arii_pro %}
    <li><a href="{{ url('arii_JID_history') }}" class="active"><span><span><img src="{{ asset('bundles/ariicore/images/wa/list.png') }}"/>&nbsp;{{ "List" | trans }}</span></span></a></li>
{% endif %}
    <li><a href="{{ url('arii_JID_history_last') }}" class="active"><span><span><img src="{{ asset('bundles/ariicore/images/wa/monitor.png') }}"/>&nbsp;{{ "Monitor" | trans }}</span></span></a></li>
{% if arii_pro %}
    <li><a href="{{ url('arii_JID_history_timeline') }}" class=""><span><span><img src="{{ asset('bundles/ariicore/images/wa/timeline.png') }}"/>&nbsp;{{ "Timeline" | trans }}</span></span></a></li>
{% endif %}
</ul>
                <span class="title_wrapper_left"></span>
		<span class="title_wrapper_right"></span>
	</div>
	<!--[if !IE]>end title wrapper<![endif]-->
<!--[if !IE]>start section content<![endif]-->
	<div class="section_content">
		<!--[if !IE]>start section content top<![endif]-->
		<div class="sct">
			<div class="sct_left">
				<div class="sct_right">
					<div class="sct_left">
                                                <div class="sct_right">
    <!--div id="mygrid" style="height:326px;background-color:white;width:100%"></div> -->
   <div id="mygrid" style="height:576px;background-color:white;position:relative;overflow:hidden;"></div>
		
						</div>
					</div>
				</div>
			</div>
		</div>
		<!--[if !IE]>end section content top<![endif]-->
		<!--[if !IE]>start section content bottom<![endif]-->
		<span class="scb"><span class="scb_left"></span><span class="scb_right"></span></span>
		<!--[if !IE]>end section content bottom<![endif]-->
		
	</div>
	<!--[if !IE]>end section content<![endif]-->
</div>
<div id="contextArea"></div>
<div id="toolbar"></div>
<!--[if !IE]>end section<![endif]-->
<script language="javascript">
var autorefresh = setInterval( "GridRefresh()",30000);
var max_history = 0; // pas d'historique
{% if  app.request.get('ordered')>0 %}
var ordered = 1;
{% else %}
var ordered = 0; // que des standalone
{% endif %}
var currentrow;

menu = new dhtmlXMenuObject(null);
menu.setIconsPath( "{{ asset('/bundles/ariicore/images/wa/') }}" );
menu.renderAsContextMenu();
menu.loadStruct("{{ url('xml_JID_jobs_menu') }}");

var dhxLayout = new dhtmlXLayoutObject("mygrid","2E");
dhxLayout.cells("b").collapse();

var toolbar = dhxLayout.attachToolbar();
toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");

toolbar.loadStruct("{{ url('xml_JID_jobs_toolbar') }}", function() {
{% if  app.request.get('ordered')>0 %}
toolbar.setItemState("ordered",true);
{% endif %}
});

dhxLayout.cells("a").hideHeader();
dhxLayout.cells("a").setHeight(295);
dhxLayout.cells("b").setText("{{ "Job detail" | trans }}");

var mygrid = dhxLayout.cells("a").attachGrid();
mygrid.selMultiRows = true;
mygrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
// mygrid.enableTreeCellEdit(false);
mygrid.setHeader("{{ "Spooler" | trans }},{{ "Path" | trans }},{{ "Job" | trans }},{{ "Status" | trans }},#cspan,{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Duration" | trans }},{{ "Exit Code" | trans }},{{ "Timeline" | trans }},{{ "PID" | trans }},&nbsp;");
mygrid.attachHeader("#select_filter,#text_filter,#text_filter,#select_filter,#cspan,#text_filter,#text_filter,#text_filter,#text_filter,<img width='480' src='{{app.request.baseurl}}/public/gantt'/>,#text_filter,#rspan");
mygrid.setInitWidths("100,*,*,80,30,130,130,100,50,495,50,25");
mygrid.setColAlign("left,left,left,center,center,right,right,right,right,right,right,center");
mygrid.setColTypes("ro,ro,ro,ro,img,ro,ro,ro,ro,ro,ro,img");
mygrid.setColSorting("str,str,str,str,str,date,date,str,str,str,int,str");
mygrid.enableContextMenu(menu);
mygrid.attachEvent("onBeforeContextMenu", onShowMenu);

// var sb = dhxLayout.cells("a").attachStatusBar();
// dhxLayout.cells("a").vs[dhxLayout.cells("a").av].sbHeight = 30;
// sb.setText('<div id="recinfoArea"></div>');
// mygrid.enablePaging(true, 20, 5, "recinfoArea");
// mygrid.setPagingSkin("toolbar","dhx_skyblue");
// mygrid.setPagingWTMode(true,true,true,[ 5, 10, 20, 50, 100, 200, 400, 800]);
// mygrid.setFiltrationLevel(-2);
mygrid.init();
mygrid.setSkin('dhx_skyblue');
mygrid.enableAlterCss("even_row","odd_row");
mygrid.i18n.paging={
      results: "{{ "Results" | trans }}",
      records: "{{ "From" | trans }} ",
      to: " {{ "to" | trans }} ",
      page:"{{ "Page" | trans }} ",
      perpage: "{{ "rows per page" | trans }}",
      first: "{{ "To first Page" | trans }}",
      previous:"{{ "Previous Page" | trans }}",
      found:"{{ "Found records" | trans }}",
      next:"{{ "Next Page" | trans }}",
      last:"{{ "To last Page" | trans }}",
      of:" {{ "of" | trans }} ",
      notfound:"{{ "No Records Found" | trans }}" };

mygrid.setColumnHidden(9,true);   
{% if  app.request.get('status') != '' %}
max_history=20;
mygrid.loadXML( "{{ url('xml_JID_jobs_grid') }}?ordered="+ordered+"&history="+max_history, function() {
//    currentrow = mygrid.getRowId(0);
    toolbar.setItemState("deploy",true);
    toolbar.setItemState("history",true);
    mygrid.getFilterElement(2).value='{{ app.request.get('status') }}';
//    mygrid.filterBy(2,"{{ app.request.get('status') }}",true);
    mygrid.expandAll();
});
{% else %}
mygrid.loadXML( "{{ url('xml_JID_jobs_grid') }}?history="+max_history);
{% endif %}

mygrid.enableLightMouseNavigation( true );
// mygrid.attachEvent("onXLE",function(){ });
mygrid.attachEvent("onRowDblClicked",JobDetail );

function JobDetail(id) {
    currentrow = id;
       dhxLayout.progressOn();
        tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_job') }}?id="+id,true); 
        loggrid.loadXML("{{ url('xml_JID_job_log') }}?id="+id); 
        hstgrid.clearAll();
        hstgrid.loadXML( "{{ url('arii_JID_grid_history_job') }}?id="+id, function () {
           dhxLayout.cells("b").expand();
//           toolbar.setItemState("contract",true);
           dhxLayout.progressOff();
       });
}

mygrid.attachEvent( "onRowSelect", function(id, value) {
    currentrow = id;
});

toolbar.attachEvent( "onClick", function(id, value) {
    switch (id) {
        case "refresh":
            GridRefresh();
        break;
        case "deploy":
            mygrid.expandAll();
        break;
        case "print":
            // mygrid.setColumnHidden(1,true);
            mygrid.printView();
            break;
    case "rss":
        document.location.href = "{{ url('rss_JID_history_job') }}";
        break;
    case "menu":
        document.location.href = "{{ url('arii_JID_index') }}";
        break;
    case "menu_history":
        document.location.href = "{{ url('arii_JID_history') }}";
        break;
    case "menu_orders":
        document.location.href = "{{ url('arii_JID_orders') }}";
        break;
    case "menu_chains":
        document.location.href = "{{ url('arii_JID_chains') }}";
        break;
    case "menu_planned":
        document.location.href = "{{ url('arii_JID_planned') }}";
        break;
    case "menu_spoolers":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_events":
        document.location.href = "{{ url('arii_JID_events') }}";
        break;
    case "menu_ha":
        document.location.href = "{{ url('arii_JID_spoolers') }}";
        break;
    case "menu_msg":
        document.location.href = "{{ url('arii_JID_messages') }}";
        break;
        default:
            alert(id);
    }
});

toolbar.attachEvent("onStateChange", function(id,state) {
    switch (id) {
        case 'deploy':
            if (state) {
                mygrid.expandAll();
            }
            else {
                mygrid.collapseAll();
            }
            break;
        case 'show_time':
            mygrid.setColumnHidden(9,!state);
            break;
        case 'history':
            if (state) {
                max_history = 20;
            }
            else {
                max_history = 0;
            }
            GridRefresh();
            break;
        case 'ordered':
            if (state) {
                ordered = 1;
            }
            else {
                ordered = 0;
            }
            GridRefresh();
            break;
        case 'contract':
            if (state) {
                dhxLayout.cells("b").expand();
//                mygrid.enablePaging(true, 10, 5, "recinfoArea"); 
            }
            else {
                dhxLayout.cells("b").collapse();
//                mygrid.enablePaging(true, 20, 5, "recinfoArea"); 
             }
             GridRefresh();
            break;
        case 'gantt':
            mygrid.setColumnHidden(5,state);      
            mygrid.setColumnHidden(6,state);      
            mygrid.setColumnHidden(7,state);  
            mygrid.setColumnHidden(8,state);   
            mygrid.setColumnHidden(9,!state);  
            break;
        default:
            break;
    }
 });

var tabbar = dhxLayout.cells("b").attachTabbar();
// tabbar.setImagePath("{{asset("arii/dhtmlx/dhtmlxTabbar/codebase/imgs/")}}");
tabbar.setSkin("dhx_skyblue");
tabbar.addTab("b1","{{ "Information" | trans }}","100px", null, true);
tabbar.addTab("b2","{{ "Log" | trans }}","100px");
tabbar.addTab("b3","{{ "History" | trans }}","100px");

tabbar.cells("b1").attachURL("{{ url('arii_JID_detail_job') }}",true);

var loggrid = tabbar.cells("b2").attachGrid();
loggrid.setHeader("{{ "Date" | trans }},{{ "Type" | trans }},{{ "Message" | trans }},{{ "Code" | trans }}");
loggrid.attachHeader("#text_filter,#select_filter,#text_filter,#select_filter");
loggrid.setInitWidths("160,40,*,60");
loggrid.setColAlign("right,left,left,right");
loggrid.setColTypes("ro,ro,ro,ro");
loggrid.setColSorting("date,str,str,int");
loggrid.init();
loggrid.setSkin('dhx_skyblue');

var hstgrid = tabbar.cells("b3").attachGrid();
hstgrid.setHeader("{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Duration" | trans }},{{ "Error" | trans }},{{ "Exit code" | trans }},{{ "Message" | trans }}");
hstgrid.attachHeader("#text_filter,#text_filter,#text_filter,#select_filter,#select_filter,#text_filter");
hstgrid.setInitWidths("130,130,100,60,70,*");
hstgrid.setColAlign("right,right,right,right,right,left");
hstgrid.setColTypes("ro,ro,ro,ro,ro,ro");
hstgrid.setColSorting("date,date,str,int,int,str");
hstgrid.init();
hstgrid.setSkin('dhx_skyblue');
// hstgrid.loadXML( "{ { url('arii_JID_grid_history_job') }}" );
hstgrid.enableAlterCss("even_row","odd_row");

function GridRefresh() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
    minutes = "0" + minutes;
    }
    if (seconds < 10){
    seconds = "0" + seconds;
    }
    toolbar.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );
{% if arii_pro %}
    mygrid.refreshFilters();
    var page_number = mygrid.currentPage;
{% endif %}
    mygrid.loadXML("{{ url('xml_JID_jobs_grid') }}?time="+seconds+"&history="+max_history+"&ordered="+ordered, function(){
{% if arii_pro %}
        mygrid.showRow(currentrow); 
        mygrid.changePage(page_number);
        mygrid.refreshFilters();
{% endif %}
        mygrid.filterByAll();
//        alert(toolbar.getItemState("deploy"));
/*        if (toolbar.getItemState("deploy")) {
            mygrid.expandAll();
        }
        else {
            mygrid.collapseAll();
        }
*/        // mygrid.selectRowById(current_row,false,true);
        dhxLayout.progressOff();
    });    
}

function GlobalRefresh() {
    GridRefresh();
}

var dhxWins = new dhtmlXWindows();
// dhxWins.enableAutoViewport(false);
dhxWins.attachViewportTo("wrapper");

// dhxWins.setImagePath("{{ asset('bundles/ariicore/js/dhtmlx/dhtmlxWindows/codebase/imgs/') }}");

function onShowMenu(rowId, celInd, grid) {
    var status = grid.cells(rowId, 3 ).getValue();
    
    // si on est operator 
    {% if is_granted('ROLE_OPERATOR') %}
    if (status !=='RUNNING') {
        menu.hideItem('kill_task');    
    }
    else {
        menu.showItem('kill_task');    
    }
    if (status !=='QUEUED')  {
        menu.hideItem('delete_task');    
    }
    else {
        menu.showItem('delete_task');    
    }
    // job stoppé
    if ((grid.cells(rowId, 3).getValue()== 'STOPPED') 
         || (grid.cells(rowId, 3).getValue()== 'STOPPING') ){    
        menu.hideItem("stop_job");
        menu.showItem("unstop_job");
    }
    else {
        menu.hideItem("unstop_job");
        menu.showItem("stop_job");
    }
    {% else %}
        menu.hideItem('start_job');
        menu.hideItem('kill_task');
        menu.hideItem('stop_job');
        menu.hideItem('unstop_job');
        menu.hideItem('pause_spooler');    
        menu.hideItem('continue_spooler');    
    {% endif %} 
 return true;
}
</script>
{% include "AriiJIDBundle:_Global:menu.html.twig" %}
{% endblock %}
{% block calendar %}      
    {{ render(controller("AriiJIDBundle:Sidebar:calendar", { 'mode': 'Past'} )) }}
{% endblock %}
